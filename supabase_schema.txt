-- IMPORTANT: If you have already created the tables from a previous version,
-- run the ALTER TABLE commands below to update your projects table without losing data.
-- You only need to do this once.

ALTER TABLE public.projects ADD COLUMN slug TEXT;
ALTER TABLE public.projects ADD COLUMN content TEXT;
ALTER TABLE public.projects ADD COLUMN goals_challenges TEXT;
ALTER TABLE public.projects ADD COLUMN outcome TEXT;
ALTER TABLE public.projects ADD COLUMN tech_stack TEXT[];
ALTER TABLE public.projects DROP COLUMN description;


-- Create the 'projects' table
CREATE TABLE public.projects (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  title text NOT NULL,
  url text NOT NULL, -- The external link to the live project
  is_featured boolean NOT NULL DEFAULT false,
  slug text NOT NULL,
  content text NULL, -- Main description in Markdown
  goals_challenges text NULL, -- Section content in Markdown
  outcome text NULL, -- Section content in Markdown
  tech_stack text[] NULL, -- Array of strings for tech used
  CONSTRAINT projects_pkey PRIMARY KEY (id),
  CONSTRAINT projects_slug_key UNIQUE (slug)
);

-- Create the 'blogs' table
CREATE TABLE public.blogs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  title text NOT NULL,
  summary text NOT NULL,
  slug text NOT NULL,
  url text NULL,
  image_url text NULL,
  content text NULL,
  is_featured boolean NOT NULL DEFAULT false,
  CONSTRAINT blogs_pkey PRIMARY KEY (id),
  CONSTRAINT blogs_slug_key UNIQUE (slug)
);

-- Create the 'page_visits' table for analytics
CREATE TABLE public.page_visits (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT page_visits_pkey PRIMARY KEY (id)
);

-- Enable Row Level Security (RLS) for the tables
ALTER TABLE public.projects ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.blogs ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.page_visits ENABLE ROW LEVEL SECURITY;


-- Create policies for public access
-- The current application uses a hardcoded password and the public 'anon' key
-- to perform all actions. For this setup, we allow broad public access to match the app's functionality.

-- Policies for 'projects' table
CREATE POLICY "Enable public read access for projects" ON public.projects
  FOR SELECT USING (true);
CREATE POLICY "Enable public full access for project admin" ON public.projects
  FOR ALL USING (true);

-- Policies for 'blogs' table
CREATE POLICY "Enable public read access for blogs" ON public.blogs
  FOR SELECT USING (true);
CREATE POLICY "Enable public full access for blog admin" ON public.blogs
  FOR ALL USING (true);
  
-- Policies for 'page_visits' table
CREATE POLICY "Enable public insert for page visits" ON public.page_visits
  FOR INSERT WITH CHECK (true);
CREATE POLICY "Enable admin read access for page visits" ON public.page_visits
  FOR SELECT USING (true);